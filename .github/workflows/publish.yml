name: Publish and Release
on:
  push:
    branches:
      - main
jobs:
  publish:
    name: Publish and create release
    if: |
      github.repository == 'kheopskit/kheopskit' && startsWith(github.event.head_commit.message, 'Version Packages')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v3
        with:
          version: 10.10.0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org/'
      - name: Install
        run: pnpm install --frozen-lockfile
      - name: Build packages
        run: pnpm build:packages
      - name: Publish Packages
        id: publish
        run: pnpm exec changeset publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Get Version
        id: get_version
        run: |
          echo "version=$(jq -r .version ./packages/core/package.json)" >> $GITHUB_OUTPUT
      - name: Get PR Number from Commit Message
        id: pr_number
        run: |
          PR_NUMBER=$(echo "${{ github.event.head_commit.message }}" | sed -n 's/^Version Packages (#\([0-9]*\)).*/\1/p')
          if [ -z "$PR_NUMBER" ]; then
            echo "No PR number found in commit message: ${{ github.event.head_commit.message }}"
            exit 1
          fi
          echo "number=$PR_NUMBER" >> $GITHUB_OUTPUT
      - name: Get Version Packages PR Body by Number
        id: pr_body
        run: |
          BODY=$(gh pr view ${{ steps.pr_number.outputs.number }} --json body -q .body)
          # Remove everything up to and including '#Releases' (case-insensitive, handles possible whitespace)
          CLEAN_BODY=$(echo "$BODY" | sed -E '1,/^# [Rr]eleases[[:space:]]*$/d')
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$CLEAN_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: v${{ steps.get_version.outputs.version }}
          body: ${{ steps.pr_body.outputs.body }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
